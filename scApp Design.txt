Sprite - represents a sprite object
+ constructor(name, imageFilename, height): create new sprite from image setting
height to specified value while preserving aspect ratio of image.
+ constructor(name, [ { poseName, imageFilename }, ... ], height):
create sprite having multiple costume appearances each defined by
poseName - string that uniquely names each pose such as 'standing', 'speaking', ...
imageFilename - string that specifies sprite image file
+ show(timeSeconds): sets sprite to be visible at given time in seconds.
+ hide(timeSeconds): sets sprite to be hidden at given time in seconds.
+ setPose(timeSeconds, poseName): set active visible version of sprite
having multiple available poses.
+ moveTo(point, timeSeconds): instantly move to specified point at time in seconds.
+ moveToSmooth(point, timeSeconds): gradually move from current position to specified
point so that sprite is located at specified point at timeSeconds.
+ sizeTo(height, timeSeconds): instantly re-size to specified height at time in seconds.
+ sizeToSmooth(height, timeSeconds): gradually change height from current height to specified
height so that sprite reaches specified height at timeSeconds.

Character: inherits from Sprite

+ think(message, style, timeSeconds, durationSeconds): display thought balloon message
to appear at timeSeconds and last for durationSeconds.
message is a text string.
style is a JavaScript object that has attributes:
{
fontStyle - name of font
fontSize - size of font
textColor - color of text
backgroundColor - color of background of balloon
tailPlacement - "left", "above", "right" anchor location of tail relative to character's head
borderColor - color of balloon outline
borderThickness - thickness of balloon outline
}

+ talk(message, style, timeSeconds, durationSeconds): display speech balloon message
to appear at timeSeconds and last for durationSeconds.
message is a text string.
style is a JavaScript object that has attributes:
{
fontStyle - name of font
fontSize - size of font
textColor - color of text
backgroundColor - color of background of balloon
tailPlacement - "left", "above", "right" anchor location of tail relative to character's head
borderColor - color of balloon outline
borderThickness - thickness of balloon outline
}

MultipleChoiceQuiz - represents a multiple-choice question
+ constructor(name): creates an empty quiz questions with given unique id name
+ setQuestionText(message): assigns question text
+ addChoice(choiceText, feedbackText, score): adds multiple choice option
with feedbackText displayed on choosing that option. score represents
points gained/lost for choosing this option.
+ setStyle(style): specify display style
style is a JavaScript object that has attributes:
{
fontStyle - name of font
fontSize - size of font
textColor - color of text
backgroundColor - color of background of balloon
borderColor - color of balloon outline
borderThickness - thickness of balloon outline
}
+ setTimeLimit(timeSeconds): optional time limit to choose an option.
+ setTimeOutMessage(messageText): message to display on timeout

+ show(timeSeconds): sets quiz to be visible at given time in seconds.
+ hide(timeSeconds): sets quiz to be hidden at given time in seconds.
+ hideWhen(condition): hides quiz when specified condition occurs.
... TBD...

Scene - represents a set of sprites comprising a scene background
+ constructor(name): create scene with given unique name
+ addSprite(name, imageFilename)
+ getSprite(name): return Sprite object of given name
+ show(timeSeconds): sets all sprites to be visible at given time in seconds.
+ hide(timeSeconds): sets all sprites to be hidden at given time in seconds.

Movie - represents the overall animated story
+ constructor(name): create movie with given unique name
+ addScene(name): create a new Scene with given unique name
+ getScene(name): returns reference to existing Scene object having given name.
+ addCharacter(name, imageFilename, height): create new character sprite from image setting
height to specified value while preserving aspect ratio of image.
+ addCharacter(name, [ { poseName, imageFilename }, ... ], height):
create character sprite having multiple costume appearances each defined by
poseName - string that uniquely names each pose such as 'standing', 'speaking', ...
imageFilename - string that specifies sprite image file
+ getCharacter(name): returns reference to Character having given name